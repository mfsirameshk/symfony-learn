security:
            
    encoders:
        Symfony\Component\Security\Core\User\UserInterface:
            algorithm: sha1
            iterations: 1
            encode_as_base64: false

    role_hierarchy:
        ROLE_ADMIN:       ROLE_USER
        ROLE_SUPER_ADMIN: [ROLE_USER, ROLE_ADMIN, ROLE_ALLOWED_TO_SWITCH]

    providers:
        #in_memory:
         #   memory:
          #      users:
           #         user:  { password: userpass, roles: [ 'ROLE_USER' ] }
            #        admin: { password: adminpass, roles: [ 'ROLE_ADMIN' ] }
                    
        main:
            mongodb: {class: Ramesh\BlogBundle\Document\User}

    firewalls:
        dev:
            pattern:  ^/(_(profiler|wdt)|css|images|js)/
            security: false

        login:
            pattern:  ^/demo/secured/login$
            security: false

        secured_area:
            pattern:    ^/demo/secured/
            form_login:
                check_path: _security_check
                login_path: _demo_login
                use_referer:        true
            logout:
                path:   _demo_logout
                target: _demo
            #anonymous: ~
            #http_basic:
            #    realm: "Secured Demo Area"
        
        user:
            pattern: ^/
            anonymous: ~
            #http_basic: ~
            form_login:
                check_path: /user/login_check
                login_path: /user/login
                use_referer: true
                
                
        login:
            pattern: ^/user/login$
            security: false
            
    access_control:
        - { path: ^/demo/secured/hello/admin/, roles: ROLE_ADMIN }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: /user/create_thru_form, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: /user/create_success, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: http }
        - { path: ^/*, roles: ROLE_USER }
